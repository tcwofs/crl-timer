{"version":3,"sources":["components/main-background/index.ts","components/main-background/BackgroundAnimation.tsx","components/main-timer/TimerMain.tsx","components/main-timer/index.ts","components/timer-countdown/index.ts","components/timer-countdown/TimerCountdown.tsx","components/timer-numerpad/NumericPad.tsx","components/timer-numerpad/index.ts","app/index.tsx","app/App.tsx","index.tsx"],"names":["BackgroundAnimation","useState","canref","setCanref","ref","useRef","stars","useEffect","current","canvas","requestID","context","getContext","numberOfStars","width","pushStars","height","render","draw","update","requestAnimationFrame","cancelAnimationFrame","x","i","push","Math","random","y","radius","vx","floor","vy","clearRect","globalCompositeOperation","length","s","fillStyle","beginPath","arc","PI","fill","stroke","starI","moveTo","j","starII","distance","lineTo","lineWidth","strokeStyle","point1","point2","xs","ys","sqrt","canvasRef","el","onResize","TimerContext","createContext","switchTimer","recievedTime","TimerMain","timer","setTimer","time","setTime","colortheme","createMuiTheme","palette","primary","main","contrastText","secondary","text","theme","Provider","value","match","id","TimerCountdown","props","useContext","hours","minutes","seconds","intervalId","setInterval","clearInterval","alert","Paper","Grid","container","item","Typography","align","color","variant","String","padStart","Button","onClick","TextMaskCustom","inputRef","other","inputElement","mask","placeholderChar","showMask","NumericPad","name","React","textmask","values","setValues","addNumber","number","replace","slice","OutlinedInput","onChange","event","target","inputComponent","autoComplete","fullWidth","map","array","key","justify","alignItems","spacing","App","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a70021a.chunk.js","sourcesContent":["import BackgroundAnimation from './BackgroundAnimation';\n\nexport default BackgroundAnimation;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Canvas from 'react-responsive-canvas';\nimport './BackgroundAnimation.css';\n\nconst BackgroundAnimation = () => {\n  const [canref, setCanref] = useState<HTMLCanvasElement | null>(null);\n  let ref = useRef<HTMLCanvasElement | null>(null);\n\n  let stars: any[] = []; // Array that contains the stars\n  let FPS = 60; // Frames per second\n\n  useEffect(() => {\n    ref.current = canref;\n    let canvas: HTMLCanvasElement = ref.current as HTMLCanvasElement;\n    if (!canvas) {\n      return;\n    }\n    let context: CanvasRenderingContext2D = canvas.getContext('2d') as CanvasRenderingContext2D;\n    let numberOfStars = canvas.width * 0.06; // Number of stars\n    let requestID: number;\n\n    const render = () => {\n      draw(context, canvas);\n      update(canvas.width, canvas.height);\n\n      requestID = requestAnimationFrame(render);\n    };\n\n    pushStars(canvas.width, canvas.height, numberOfStars);\n    render();\n\n    return () => {\n      cancelAnimationFrame(requestID);\n    };\n  });\n\n  const pushStars = (width: number, height: number, x: number) => {\n    for (let i = 0; i < x; i++) {\n      stars.push({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        radius: (Math.random() * height * 2) / width,\n        vx: Math.floor(Math.random() * 50) - 25,\n        vy: Math.floor(Math.random() * 50) - 25,\n      });\n    }\n  };\n\n  const draw = (context: any, canvas: HTMLCanvasElement) => {\n    if (!canvas) {\n      return;\n    }\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    context.globalCompositeOperation = 'lighter';\n\n    for (let i = 0, x = stars.length; i < x; i++) {\n      let s = stars[i];\n\n      context.fillStyle = '#efefef';\n      context.beginPath();\n      context.arc(s.x, s.y, s.radius, 0, 2 * Math.PI);\n      context.fill();\n      context.fillStyle = 'black';\n      context.stroke();\n    }\n\n    context.beginPath();\n    for (let i = 0, x = stars.length; i < x; i++) {\n      let starI = stars[i];\n      context.moveTo(starI.x, starI.y);\n      for (let j = 0, x = stars.length; j < x; j++) {\n        let starII = stars[j];\n        if (distance(starI, starII) < 150) {\n          context.lineTo(starII.x, starII.y);\n        }\n      }\n    }\n    context.lineWidth = 0.05;\n    context.strokeStyle = 'white';\n    context.stroke();\n  };\n\n  const distance = (point1: { x: number; y: number }, point2: { x: number; y: number }) => {\n    let xs = 0;\n    let ys = 0;\n\n    xs = point2.x - point1.x;\n    xs = xs * xs;\n\n    ys = point2.y - point1.y;\n    ys = ys * ys;\n\n    return Math.sqrt(xs + ys);\n  };\n\n  // Update star locations\n\n  const update = (width: number, height: number) => {\n    for (let i = 0, x = stars.length; i < x; i++) {\n      let s = stars[i];\n\n      s.x += s.vx / FPS;\n      s.y += s.vy / FPS;\n\n      if (s.x < 0 || s.x > width) s.vx = -s.vx;\n      if (s.y < 0 || s.y > height) s.vy = -s.vy;\n    }\n  };\n\n  return <Canvas canvasRef={(el: HTMLCanvasElement) => setCanref(el)} onResize={draw} />;\n};\n\nexport default BackgroundAnimation;\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport React, { createContext, useState } from 'react';\nimport { NumericPad, TimerCountdown } from '../index';\nimport './TimerMain.css';\n\nexport const TimerContext = createContext({\n  // eslint-disable-next-line no-unused-vars\n  switchTimer: (recievedTime: string) => {\n    return;\n  },\n});\n\nexport default () => {\n  const [timer, setTimer] = useState(false);\n  const [time, setTime] = useState<Array<string> | null>([]);\n\n  const colortheme = createMuiTheme({\n    palette: {\n      primary: { main: '#00695c', contrastText: '#e6e6e6' },\n      secondary: { main: '#e91e63', contrastText: '#e6e6e6' },\n      text: { primary: '#e6e6e6' },\n    },\n  });\n\n  const switchTimer = (recievedTime: string) => {\n    if (recievedTime === '00:00:00') return;\n    if (recievedTime === 'return') setTimer(!timer);\n    setTime(recievedTime.match(/(\\d[\\d.]*)/g));\n    setTimer(!timer);\n  };\n\n  return (\n    <MuiThemeProvider theme={colortheme}>\n      <TimerContext.Provider value={{ switchTimer }}>\n        <div id='timermain'>{!timer ? <NumericPad /> : <TimerCountdown time={time} />}</div>\n      </TimerContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n","import TimerMain from './TimerMain';\n\nexport default TimerMain;\n","import TimerCountdown from './TimerCountdown';\n\nexport default TimerCountdown;\n","import { Button, Grid, Paper, Typography } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { TimerContext } from '../main-timer/TimerMain';\nimport './TimerCountdown.css';\n\nconst TimerCountdown = (props: any) => {\n  const { switchTimer } = useContext(TimerContext);\n  let [hours, minutes, seconds]: [number, number, number] = props.time;\n  const [time, setTime] = useState(+hours * 60 * 60 + +minutes * 60 + +seconds);\n\n  useEffect(() => {\n    if (!time) {\n      alert('time is up!');\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      setTime(time - 1);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [time]);\n\n  return (\n    <Paper id='paper'>\n      <Grid container>\n        {time === 0 ? (\n          <Grid item xs={12} id='gridText'>\n            <Typography align='center' color='error' variant='h5'>\n              time is up!\n            </Typography>\n          </Grid>\n        ) : (\n          <></>\n        )}\n        <Grid item xs={12} id='gridText'>\n          <Typography align='center' color='textPrimary' variant='h5'>{`${String(Math.floor(time / 3600)).padStart(2, '0')} : ${String(\n            Math.floor((time % 3600) / 60)\n          ).padStart(2, '0')} : ${String(time % 60).padStart(2, '0')}`}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button id='text-input-button' variant='contained' color='primary' onClick={() => switchTimer('return')}>\n            back\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TimerCountdown;\n","import { Button, Grid, OutlinedInput, Paper } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { TimerContext } from '../main-timer/TimerMain';\nimport './NumericPad.css';\n\ninterface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\nfunction TextMaskCustom(props: TextMaskCustomProps) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref: any) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n      placeholderChar={'0'}\n      showMask\n    />\n  );\n}\n\ninterface State {\n  textmask: string;\n}\n\nexport default () => {\n  const { switchTimer } = useContext(TimerContext);\n  const [values, setValues] = React.useState<State>({ textmask: '00:00:00' });\n\n  const addNumber = (number: string) => {\n    setValues({ textmask: (values.textmask.replace(/:/g, '').slice(1) + number).replace(/^(\\d{2})(\\d{2})/, '$1:$2:') });\n  };\n\n  const handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <Paper id='paper'>\n      <Grid container>\n        <Grid item xs={12}>\n          <OutlinedInput\n            id='formatted-text-mask-input'\n            value={values.textmask}\n            onChange={handleChange('textmask')}\n            inputComponent={TextMaskCustom as any}\n            autoComplete='false'\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          {[\n            ['1', '2', '3'],\n            ['4', '5', '6'],\n            ['7', '8', '9'],\n          ].map(array => (\n            <Grid key={array[0]} container justify='space-between' alignItems='center' spacing={1}>\n              {array.map(value => (\n                <Grid key={value} item xs={4}>\n                  <Button id='numeric-button' onClick={() => addNumber(value)}>\n                    {value}\n                  </Button>\n                </Grid>\n              ))}\n            </Grid>\n          ))}\n\n          <Grid container justify='space-between' alignItems='center' spacing={1}>\n            <Grid item xs={4}>\n              <Button id='text-input-button' variant='contained' color='primary' onClick={() => switchTimer(values.textmask)}>\n                Start\n              </Button>\n            </Grid>\n            <Grid item xs={4}>\n              <Button id='numeric-button' variant='contained' onClick={() => addNumber('0')}>\n                0\n              </Button>\n            </Grid>\n            <Grid item xs={4}>\n              <Button id='text-input-button' variant='contained' color='secondary' onClick={() => setValues({ textmask: '00:00:00' })}>\n                Clear\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","import NumericPad from './NumericPad';\n\nexport default NumericPad;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { BackgroundAnimation, TimerMain } from '../components';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <TimerMain />\n      <BackgroundAnimation />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}